[{"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\index.tsx":"1","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Store.js":"2","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\Reducer1.js":"3","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\App.js":"4","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Routes\\Routes.js":"5","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Home.js":"6","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\index.js":"7","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\ScrollToTop.js":"8","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\Navbar.js":"9","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Data\\Navbar_Routes.js":"10","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\Footer.js":"11","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\HealthTracker.js":"12","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Adoption.js":"13","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Diary.js":"14","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\auth\\Register.js":"15","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\auth\\Login.js":"16","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\RegisterSlice.js":"17","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\LoginSlice.js":"18","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\PostSlice.js":"19","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Utils\\setAuthToken.js":"20","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\AdoptionSlice.js":"21","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Game.js":"22","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Kitten.js":"23","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Profile.js":"24","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\KittenSlice.js":"25","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\ProfileSlice.js":"26"},{"size":413,"mtime":1693178717881,"results":"27","hashOfConfig":"28"},{"size":653,"mtime":1693533365047,"results":"29","hashOfConfig":"28"},{"size":617,"mtime":1690478070708,"results":"30","hashOfConfig":"28"},{"size":1071,"mtime":1692644810114,"results":"31","hashOfConfig":"28"},{"size":2084,"mtime":1693400594965,"results":"32","hashOfConfig":"28"},{"size":1430,"mtime":1692538836215,"results":"33","hashOfConfig":"28"},{"size":149,"mtime":1692186322905,"results":"34","hashOfConfig":"28"},{"size":366,"mtime":1690478070705,"results":"35","hashOfConfig":"28"},{"size":1809,"mtime":1693408607174,"results":"36","hashOfConfig":"28"},{"size":698,"mtime":1693408474605,"results":"37","hashOfConfig":"28"},{"size":108,"mtime":1692186322865,"results":"38","hashOfConfig":"28"},{"size":162,"mtime":1693400595074,"results":"39","hashOfConfig":"28"},{"size":1449,"mtime":1693597513368,"results":"40","hashOfConfig":"28"},{"size":5123,"mtime":1693490077721,"results":"41","hashOfConfig":"28"},{"size":2613,"mtime":1692622812452,"results":"42","hashOfConfig":"28"},{"size":1866,"mtime":1692626118230,"results":"43","hashOfConfig":"28"},{"size":1224,"mtime":1693195510533,"results":"44","hashOfConfig":"28"},{"size":2148,"mtime":1692713334135,"results":"45","hashOfConfig":"28"},{"size":4012,"mtime":1693195513764,"results":"46","hashOfConfig":"28"},{"size":249,"mtime":1692644810113,"results":"47","hashOfConfig":"28"},{"size":3569,"mtime":1693601729152,"results":"48","hashOfConfig":"28"},{"size":4471,"mtime":1693018072714,"results":"49","hashOfConfig":"28"},{"size":5441,"mtime":1693601753499,"results":"50","hashOfConfig":"28"},{"size":4023,"mtime":1693597341404,"results":"51","hashOfConfig":"28"},{"size":2507,"mtime":1693601729152,"results":"52","hashOfConfig":"28"},{"size":2925,"mtime":1693570452980,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a2hvly",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\index.tsx",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Store.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\Reducer1.js",[],[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\App.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Routes\\Routes.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Home.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\index.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\ScrollToTop.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\Navbar.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Data\\Navbar_Routes.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Components\\Footer.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\HealthTracker.js",["139"],[],"import React from 'react'\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default function HealthTracker() {\r\n  return (\r\n    <div>HealthTracker</div>\r\n  )\r\n}\r\n","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Adoption.js",["140"],[],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAdoptions,\r\n  applyAdoption,\r\n  cancelApply,\r\n} from \"../Redux/Reducers/AdoptionSlice\";\r\n\r\nconst AdoptionsPage = ({\r\n  adoptions,\r\n  loading,\r\n  getAdoptions,\r\n  applyAdoption,\r\n  cancelApply,\r\n}) => {\r\n  useEffect(() => {\r\n    getAdoptions();\r\n  }, [adoptions]);\r\n\r\n  const handleApply = (id) => {\r\n    applyAdoption(id);\r\n  };\r\n\r\n  const handleCancelApply = (id) => {\r\n    cancelApply(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Adoptions Page</h1>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <ul>\r\n          {adoptions.map((adoption) => (\r\n            <li key={adoption._id}>\r\n              {console.log(adoptions)}\r\n              <h3>{adoption.kitten.breed}</h3>\r\n              <img src={adoption.kitten.pic} alt={adoption.kitten.alt}></img>\r\n              <button onClick={() => handleApply(adoption._id)}>Apply</button>\r\n              <button onClick={() => handleCancelApply(adoption._id)}>\r\n                Cancel Apply\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adoptions: state.adoption.adoptions,\r\n  loading: state.adoption.loading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAdoptions,\r\n  applyAdoption,\r\n  cancelApply,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdoptionsPage);\r\n","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Diary.js",["141"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getPosts,\r\n  createPost,\r\n  likePost,\r\n  unlikePost,\r\n  deletePost,\r\n  getPost,\r\n  addComment,\r\n  removeComment,\r\n} from \"../Redux/Reducers/PostSlice\";\r\n\r\nconst Post = ({\r\n  currentUser,\r\n  post,\r\n  onLike,\r\n  onUnlike,\r\n  onDelete,\r\n  onView,\r\n  onAddComment,\r\n  onRemoveComment,\r\n}) => {\r\n  const [showCommentInput, setShowCommentInput] = useState(false);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const handleToggleCommentInput = () => {\r\n    setShowCommentInput(!showCommentInput);\r\n    setCommentText(\"\"); // Clear comment text when toggling\r\n  };\r\n\r\n  const handleAddComment = () => {\r\n    onAddComment(post._id, { text: commentText });\r\n    setShowCommentInput(false); // Hide comment input after adding comment\r\n    setCommentText(\"\"); // Clear comment text\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>{post.title}</h3>\r\n      <p>{post.text}</p>\r\n      <button onClick={() => onLike(post._id)}>Like</button>\r\n      <button onClick={() => onUnlike(post._id)}>Unlike</button>\r\n      {currentUser && currentUser.toString() === post.user && (\r\n        <button onClick={() => onDelete(post._id)}>Delete</button>\r\n      )}\r\n      <button onClick={() => onView(post._id)}>View</button>\r\n      <button onClick={handleToggleCommentInput}>\r\n        {showCommentInput ? \"Cancel\" : \"Add Comment\"}\r\n      </button>\r\n      {showCommentInput && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={commentText}\r\n            onChange={(e) => setCommentText(e.target.value)}\r\n            placeholder=\"Add a comment...\"\r\n          />\r\n          <button onClick={handleAddComment}>Add Comment</button>\r\n        </div>\r\n      )}\r\n      {post.comments.map((comment) => (\r\n        <div key={comment._id}>\r\n          <p>{comment.text}</p>\r\n          {currentUser && currentUser.toString() === comment.user && (\r\n            <button onClick={() => onRemoveComment(post._id, comment._id)}>\r\n              Delete Comment\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostList = ({\r\n  posts,\r\n  onLike,\r\n  onUnlike,\r\n  onDelete,\r\n  onView,\r\n  onAddComment,\r\n  onRemoveComment,\r\n  currentUser,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {posts.map((post) => (\r\n        <Post\r\n          key={post._id}\r\n          post={post}\r\n          onLike={onLike}\r\n          onUnlike={onUnlike}\r\n          onDelete={onDelete}\r\n          onView={onView}\r\n          onAddComment={onAddComment}\r\n          onRemoveComment={onRemoveComment}\r\n          currentUser={currentUser}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostForm = ({ onSubmit }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setContent] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ title, text });\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Create New Post</h3>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Content\"\r\n        value={text}\r\n        onChange={(e) => setContent(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Create Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostPage = ({\r\n  posts,\r\n  loading,\r\n  getPosts,\r\n  createPost,\r\n  likePost,\r\n  unlikePost,\r\n  deletePost,\r\n  getPost,\r\n  addComment,\r\n  removeComment,\r\n  currentUser,\r\n}) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n    console.log(currentUser);\r\n  }, [posts]);\r\n\r\n  const handleCreatePost = (formData) => {\r\n    createPost(formData);\r\n  };\r\n\r\n  const handleLikePost = (postId) => {\r\n    likePost(postId);\r\n  };\r\n\r\n  const handleUnlikePost = (postId) => {\r\n    unlikePost(postId);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    deletePost(postId);\r\n  };\r\n\r\n  const handleGetPost = (postId) => {\r\n    getPost(postId);\r\n  };\r\n\r\n  const handleAddComment = (postId, formData) => {\r\n    addComment(postId, formData);\r\n  };\r\n\r\n  const handleRemoveComment = (postId, commentId) => {\r\n    removeComment(postId, commentId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Post Management</h1>\r\n      <PostForm onSubmit={handleCreatePost} />\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <PostList\r\n          posts={posts}\r\n          onLike={handleLikePost}\r\n          onUnlike={handleUnlikePost}\r\n          onDelete={handleDeletePost}\r\n          onView={handleGetPost}\r\n          onAddComment={handleAddComment}\r\n          onRemoveComment={handleRemoveComment}\r\n          currentUser={currentUser}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.post.posts,\r\n  loading: state.post.loading,\r\n  currentUser: state.login.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPosts,\r\n  createPost,\r\n  likePost,\r\n  unlikePost,\r\n  deletePost,\r\n  getPost,\r\n  addComment,\r\n  removeComment,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage);\r\n","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\auth\\Register.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\auth\\Login.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\RegisterSlice.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\LoginSlice.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\PostSlice.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Utils\\setAuthToken.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\AdoptionSlice.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Game.js",["142"],[],"// import React from 'react'\r\n\r\n// export default function Shop() {\r\n//   return (\r\n//     <div>Shop</div>\r\n//   )\r\n// }\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst boardStyle = {\r\n  backgroundColor: \"#eee\",\r\n  width: \"208px\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  border: \"3px #eee solid\",\r\n};\r\n\r\nconst containerStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n};\r\n\r\nconst instructionsStyle = {\r\n  marginTop: \"5px\",\r\n  marginBottom: \"5px\",\r\n  fontWeight: \"bold\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nconst buttonStyle = {\r\n  marginTop: \"15px\",\r\n  marginBottom: \"16px\",\r\n  width: \"80px\",\r\n  height: \"40px\",\r\n  backgroundColor: \"#8acaca\",\r\n  color: \"white\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nfunction Square({ value, onClick }) {\r\n  return (\r\n    <div onClick={onClick} className=\"square\" style={squareStyle}>\r\n      {value}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst squareStyle = {\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  backgroundColor: \"#ddd\",\r\n  margin: \"4px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  fontSize: \"20px\",\r\n  color: \"white\",\r\n};\r\n\r\nfunction Board() {\r\n  const [squares, setSquares] = useState(Array(9).fill(null));\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [winner, setWinner] = useState(null);\r\n  const [computerThinking, setComputerThinking] = useState(false);\r\n\r\n  const renderSquare = (i) => {\r\n    return <Square value={squares[i]} onClick={() => handleClick(i)} />;\r\n  };\r\n\r\n  const getStatus = () => {\r\n    if (winner) {\r\n      return `Winner: ${winner}`;\r\n    } else {\r\n      return `Next player: ${xIsNext ? \"X\" : \"O\"}`;\r\n    }\r\n  };\r\n\r\n  const resetBoard = () => {\r\n    setSquares(Array(9).fill(null));\r\n    setXIsNext(true);\r\n    setWinner(null);\r\n    setComputerThinking(false);\r\n  };\r\n\r\n  const computerMove = () => {\r\n    const availableMoves = squares\r\n      .map((square, index) => {\r\n        return square === null ? index : null;\r\n      })\r\n      .filter((index) => index !== null);\r\n\r\n    const randomMove =\r\n      availableMoves[Math.floor(Math.random() * availableMoves.length)];\r\n    return randomMove;\r\n  };\r\n\r\n  const handleClick = (i) => {\r\n    if (squares[i] || winner || computerThinking) return;\r\n\r\n    const newSquares = squares.slice();\r\n    newSquares[i] = xIsNext ? \"X\" : \"O\";\r\n    setSquares(newSquares);\r\n\r\n    if (calculateWinner(newSquares)) {\r\n      setWinner(newSquares[i]);\r\n    }\r\n\r\n    setXIsNext(!xIsNext);\r\n    setComputerThinking(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!xIsNext && !winner && computerThinking) {\r\n      const computerMoveIndex = computerMove();\r\n      setTimeout(() => {\r\n        const newSquares = squares.slice();\r\n        newSquares[computerMoveIndex] = \"O\";\r\n        setSquares(newSquares);\r\n\r\n        if (calculateWinner(newSquares)) {\r\n          setWinner(\"O\");\r\n        }\r\n\r\n        setXIsNext(true);\r\n        setComputerThinking(false);\r\n      }, 2000); // 2秒的思考时间延迟\r\n    }\r\n  }, [computerThinking]);\r\n\r\n  return (\r\n    <div style={containerStyle} className=\"gameBoard\">\r\n      <div id=\"statusArea\" className=\"status\" style={instructionsStyle}>\r\n        {getStatus()}\r\n      </div>\r\n      <button style={buttonStyle} onClick={resetBoard}>\r\n        Reset\r\n      </button>\r\n      <div style={boardStyle}>\r\n        <div className=\"board-row\" style={{ display: \"flex\" }}>\r\n          {renderSquare(0)}\r\n          {renderSquare(1)}\r\n          {renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\" style={{ display: \"flex\" }}>\r\n          {renderSquare(3)}\r\n          {renderSquare(4)}\r\n          {renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\" style={{ display: \"flex\" }}>\r\n          {renderSquare(6)}\r\n          {renderSquare(7)}\r\n          {renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default function Game() {\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Kitten.js",["143","144"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getKittens,\r\n  addKitten,\r\n  updateKitten,\r\n  deleteKitten,\r\n} from \"../Redux/Reducers/KittenSlice\";\r\nimport {\r\n  getAdoptions,\r\n  createAdoption,\r\n  removeAdoption,\r\n} from \"../Redux/Reducers/AdoptionSlice\";\r\n\r\nfunction convertToBase64(file){\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result)\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n\r\nconst KittenPage = ({\r\n  kittens,\r\n  adoptions,\r\n  loading,\r\n  getKittens,\r\n  addKitten,\r\n  updateKitten,\r\n  deleteKitten,\r\n  getAdoptions,\r\n  createAdoption,\r\n  removeAdoption,\r\n}) => {\r\n  useEffect(() => {\r\n    getKittens();\r\n    getAdoptions();\r\n  }, [kittens,adoptions]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    breed: \"\",\r\n    alt: \"\",\r\n    pic: \"\", // Add pic field if needed\r\n  });\r\n\r\n  const [formData2, setFormData2] = useState({\r\n    breed: \"\",\r\n    alt: \"\",\r\n    pic: \"\", // Add pic field if needed\r\n  });\r\n\r\n  const [editKittenId, setEditKittenId] = useState(null); // Track the kitten being edited\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const base64 = await convertToBase64(file);\r\n    console.log(base64)\r\n    setFormData({ ...formData, pic: base64 });\r\n  };\r\n  \r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChange2 = (e) => {\r\n    setFormData2({ ...formData2, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    addKitten(formData);\r\n    setFormData({\r\n      breed: \"\",\r\n      alt: \"\",\r\n      pic: \"\",\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (kittenId) => {\r\n    updateKitten(kittenId, formData2);\r\n    setEditKittenId(null);\r\n    setFormData2({\r\n      breed: \"\",\r\n      alt: \"\",\r\n      pic: \"\",\r\n    });\r\n  };\r\n\r\n  const handleDelete = (kittenId) => {\r\n    deleteKitten(kittenId);\r\n  };\r\n\r\n  const handleEdit = (kittenId) => {\r\n    const editedKitten = kittens.find((kitten) => kitten._id === kittenId);\r\n    setFormData2({\r\n      breed: editedKitten.breed,\r\n      alt: editedKitten.alt,\r\n      pic: \"\", // Add pic field if needed\r\n    });\r\n    setEditKittenId(kittenId);\r\n  };\r\n\r\n  const handleCreateAd = (kittenId) => {\r\n    createAdoption(kittenId);\r\n  };\r\n\r\n  const handleRemoveAd = (kittenId, adoptions) => {\r\n    adoptions = adoptions.filter((adoption) => adoption.kitten == kittenId);\r\n    removeAdoption(adoptions[0]._id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Kitten Page</h1>\r\n      {/* Add form for adding a new kitten */}\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          name=\"breed\"\r\n          value={formData.breed}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"alt\"\r\n          value={formData.alt}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          name=\"pic\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => handleFileChange(e)}\r\n        />\r\n\r\n        {/* Add input fields for other kitten information */}\r\n        <button type=\"button\" onClick={handleAdd}>\r\n          Add Kitten\r\n        </button>\r\n      </form>\r\n\r\n      {loading ? (\r\n        <p>Loading kittens...</p>\r\n      ) : (\r\n        <ul>\r\n          {kittens.map((kitten) => (\r\n            <li key={kitten._id}>\r\n              {editKittenId === kitten._id ? ( // Check if the kitten is being edited\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"breed\"\r\n                    value={formData2.breed}\r\n                    onChange={handleChange2}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"alt\"\r\n                    value={formData2.alt}\r\n                    onChange={handleChange2}\r\n                  />\r\n                  <button onClick={() => handleUpdate(kitten._id)}>Save</button>\r\n                  <button onClick={() => setEditKittenId(null)}>Cancel</button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h3>{kitten.breed}</h3>\r\n                  <p>{kitten.alt}</p>\r\n                  <img src={kitten.pic} alt={kitten.alt}/>\r\n                  \r\n                  <button onClick={() => handleEdit(kitten._id)}>Edit</button>\r\n                  <button onClick={() => handleDelete(kitten._id)}>\r\n                    Delete\r\n                  </button>\r\n                  <button onClick={() => handleCreateAd(kitten._id)}>\r\n                    Create adoption\r\n                  </button>\r\n                  <button onClick={() => handleRemoveAd(kitten._id, adoptions)}>\r\n                    Delete adoption{\" \"}\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adoptions: state.adoption.adoptions,\r\n  kittens: state.kitten.kittens,\r\n  loading: state.kitten.loading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getKittens,\r\n  addKitten,\r\n  updateKitten,\r\n  deleteKitten,\r\n  getAdoptions,\r\n  createAdoption,\r\n  removeAdoption,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KittenPage);","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Pages\\Profile.js",["145"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserProfiles,\r\n  updateUserProfile,\r\n  deleteUserProfile,\r\n} from \"../Redux/Reducers/ProfileSlice\";\r\n\r\nconst UserProfilePage = ({\r\n  userProfiles,\r\n  userProfile,\r\n  currentUser, // 当前登录用户的信息\r\n  loading,\r\n  getUserProfile,\r\n  getUserProfiles,\r\n  updateUserProfile,\r\n  deleteUserProfile,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserProfiles();\r\n    // 加载当前用户的profile\r\n    getUserProfile(currentUser);\r\n  }, [userProfiles, currentUser]);\r\n\r\n  const [searchName, setSearchName] = useState(\"\"); // 搜索框的输入\r\n  const [searchResults, setSearchResults] = useState([]); // 搜索结果\r\n  const [showResults, setShowResults] = useState(false); // 控制是否显示搜索结果\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value;\r\n    console.log(query);\r\n    setSearchName(query);\r\n\r\n    if (query.length > 0) {\r\n      // 执行搜索并更新搜索结果\r\n      const results = userProfiles.filter((profile) =>\r\n        profile.user.name.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      setSearchResults(results);\r\n      setShowResults(results.length > 0);\r\n    } else {\r\n      // 清空搜索结果\r\n      setSearchResults([]);\r\n      setShowResults(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateProfile = () => {\r\n    // 更新当前用户的profile\r\n    updateUserProfile({\r\n      _id: currentUser, // 传递用户的ID以进行更新\r\n      name: userProfile.user.name, // 保留用户名\r\n      // 添加其他字段\r\n    });\r\n  };\r\n\r\n  const handleDeleteProfile = () => {\r\n    // 删除当前用户的profile\r\n    deleteUserProfile(currentUser);\r\n    // 执行额外的操作\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Profile</h1>\r\n      {/* 用户可以查看自己的profile */}\r\n      {userProfile && (\r\n        <div>\r\n          <h2>Your Profile</h2>\r\n          <form>\r\n            <div>\r\n              <label>Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={userProfile.user.name}\r\n                readOnly\r\n              />\r\n            </div>\r\n            {/* 添加其他输入字段 */}\r\n          </form>\r\n          <button onClick={handleUpdateProfile}>Update Profile</button>\r\n          <button onClick={handleDeleteProfile}>Delete Profile</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 搜索框 */}\r\n      <h2>Search Profiles</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by name...\"\r\n        value={searchName}\r\n        onChange={handleSearchChange}\r\n      />\r\n\r\n      {/* 显示搜索结果 */}\r\n      {showResults && (\r\n        <div className=\"search-results\">\r\n          <h3>Search Results</h3>\r\n          <ul>\r\n            {searchResults.map((profile) => (\r\n              <ProfileCard profile={profile} key={profile._id} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {loading && <p>Loading user profiles...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileCard = ({ profile }) => {\r\n  const [showKittens, setShowKittens] = useState(false);\r\n  return (\r\n    <li key={profile._id}>\r\n      <p>{profile.user.name}</p>\r\n      {showKittens && (\r\n        <ui>\r\n          {profile.kittens.map((kitten) => (\r\n            <li>{kitten.breed}</li>\r\n          ))}\r\n        </ui>\r\n      )}\r\n      <button\r\n        onClick={() => {\r\n          setShowKittens(!showKittens);\r\n        }}\r\n      >\r\n        {showKittens ? \"Cancel show\" : \"Show kittens\"}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userProfiles: state.profile.userProfiles,\r\n  userProfile: state.profile.userProfile,\r\n\r\n  currentUser: state.login.currentUser,\r\n  loading: state.profile.loading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getUserProfile,\r\n  getUserProfiles,\r\n  updateUserProfile,\r\n  deleteUserProfile,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfilePage);\r\n","C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\KittenSlice.js",[],[],"C:\\Users\\wangz\\OneDrive\\文档\\GitHub\\Kitten\\frontend\\src\\Redux\\Reducers\\ProfileSlice.js",[],[],{"ruleId":"146","severity":1,"message":"147","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":18,"column":6,"nodeType":"152","endLine":18,"endColumn":17,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":151,"column":6,"nodeType":"152","endLine":151,"endColumn":13,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"156","line":132,"column":6,"nodeType":"152","endLine":132,"endColumn":24,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"158","line":43,"column":6,"nodeType":"152","endLine":43,"endColumn":25,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":113,"column":64,"nodeType":"162","messageId":"163","endLine":113,"endColumn":66},{"ruleId":"150","severity":1,"message":"164","line":24,"column":6,"nodeType":"152","endLine":24,"endColumn":33,"suggestions":"165"},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAdoptions'. Either include it or remove the dependency array. If 'getAdoptions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["166"],"React Hook useEffect has missing dependencies: 'currentUser' and 'getPosts'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"React Hook useEffect has missing dependencies: 'computerMove', 'squares', 'winner', and 'xIsNext'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'getAdoptions' and 'getKittens'. Either include them or remove the dependency array. If 'getKittens' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["169"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getUserProfile' and 'getUserProfiles'. Either include them or remove the dependency array. If 'getUserProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [adoptions, getAdoptions]",{"range":"181","text":"182"},"Update the dependencies array to be: [currentUser, getPosts, posts]",{"range":"183","text":"184"},"Update the dependencies array to be: [computerMove, computerThinking, squares, winner, xIsNext]",{"range":"185","text":"186"},"Update the dependencies array to be: [kittens, adoptions, getKittens, getAdoptions]",{"range":"187","text":"188"},"Update the dependencies array to be: [userProfiles, currentUser, getUserProfiles, getUserProfile]",{"range":"189","text":"190"},[348,359],"[adoptions, getAdoptions]",[3643,3650],"[currentUser, getPosts, posts]",[3019,3037],"[computerMove, computerThinking, squares, winner, xIsNext]",[881,900],"[kittens, adoptions, getKittens, getAdoptions]",[531,558],"[userProfiles, currentUser, getUserProfiles, getUserProfile]"]