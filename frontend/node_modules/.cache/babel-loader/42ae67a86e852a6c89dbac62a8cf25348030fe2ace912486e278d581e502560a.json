{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  error: null\n};\nconst LoginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    setField: (state, action) => {\n      const {\n        field,\n        value\n      } = action.payload;\n      state[field] = value;\n    },\n    loginSuccess: state => {\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setField,\n  loginSuccess,\n  loginFailure\n} = LoginSlice.actions;\nexport const loginUser = loginUser => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify(loginUser);\n    const res = await axios.post(\"/api/auth\", body, config);\n    dispatch(loginSuccess());\n    localStorage.setItem(\"token\", res.data.token); // Store the token in localStorage\n  } catch (err) {\n    dispatch(loginFailure(err.response.data));\n  }\n};\n\n// ... other thunks ...\nexport const logoutUser = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"token\"); // Remove the token from localStorage\n    // You might also want to dispatch actions to reset other parts of your state\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport default LoginSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","email","password","error","LoginSlice","name","reducers","setField","state","action","field","value","payload","loginSuccess","loginFailure","actions","loginUser","dispatch","config","headers","body","JSON","stringify","res","post","localStorage","setItem","data","token","err","response","logoutUser","removeItem","console","reducer"],"sources":["C:/Users/wangz/OneDrive/文档/GitHub/Kitten/frontend/src/Redux/Reducers/LoginSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null,\r\n};\r\n\r\nconst LoginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    setField: (state, action) => {\r\n      const { field, value } = action.payload;\r\n      state[field] = value;\r\n    },\r\n    loginSuccess: (state) => {\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setField,\r\n  loginSuccess,\r\n  loginFailure,\r\n} = LoginSlice.actions;\r\n\r\nexport const loginUser = (loginUser) => async (dispatch) => {\r\n  try {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const body = JSON.stringify(loginUser);\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n    dispatch(loginSuccess());\r\n    localStorage.setItem(\"token\", res.data.token); // Store the token in localStorage\r\n  } catch (err) {\r\n    dispatch(loginFailure(err.response.data));\r\n  }\r\n};\r\n\r\n// ... other thunks ...\r\nexport const logoutUser = () => async (dispatch) => {\r\n    try {\r\n      localStorage.removeItem(\"token\"); // Remove the token from localStorage\r\n      // You might also want to dispatch actions to reset other parts of your state\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n\r\nexport default LoginSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAGF,MAAM,CAACG,OAAO;MACvCJ,KAAK,CAACE,KAAK,CAAC,GAAGC,KAAK;IACtB,CAAC;IACDE,YAAY,EAAGL,KAAK,IAAK;MACvBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,YAAY,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACG,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXL,QAAQ;EACRM,YAAY;EACZC;AACF,CAAC,GAAGV,UAAU,CAACW,OAAO;AAEtB,OAAO,MAAMC,SAAS,GAAIA,SAAS,IAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMC,MAAM,GAAG;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAAE,CAAC;IAClE,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACN,SAAS,CAAC;IACtC,MAAMO,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,WAAW,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IACvDD,QAAQ,CAACJ,YAAY,CAAC,CAAC,CAAC;IACxBY,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZZ,QAAQ,CAACH,YAAY,CAACe,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC,CAAC;EAC3C;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAGA,CAAA,KAAM,MAAOd,QAAQ,IAAK;EAChD,IAAI;IACFQ,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC;EACF,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZI,OAAO,CAAC9B,KAAK,CAAC0B,GAAG,CAAC;EACpB;AACF,CAAC;AAGH,eAAezB,UAAU,CAAC8B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}