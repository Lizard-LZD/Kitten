{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// import { setAlert } from \"./alert\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  error: {},\n  loading: true\n};\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    getPostsSuccess(state, action) {\n      state.posts = action.payload;\n      state.post = null;\n      state.loading = false;\n    },\n    createPostSuccess(state, action) {\n      state.posts.unshift(action.payload);\n      state.loading = false;\n    },\n    postError(state, action) {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    updateLikes(state, action) {\n      const {\n        id,\n        likes\n      } = action.payload;\n      state.posts = state.posts.map(post => post._id === id ? {\n        ...post,\n        likes\n      } : post);\n      state.loading = false;\n    },\n    removePost(state, action) {\n      console.log(\"1111111111111111111\");\n      const {\n        id\n      } = action.payload;\n      state.posts = state.posts.filter(post => post._id !== id);\n      state.loading = false;\n    },\n    getPostSuccess(state, action) {\n      state.post = action.payload;\n      state.loading = false;\n    },\n    addOrRemoveComment(state, action) {\n      state.post = {\n        ...state.post,\n        comments: action.payload\n      };\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  getPostsSuccess,\n  createPostSuccess,\n  postError,\n  updateLikes,\n  removePost,\n  getPostSuccess,\n  addOrRemoveComment\n} = postSlice.actions;\n\n// Async Thunks\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    dispatch(getPostsSuccess(res.data));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n    console.log(error.response.data);\n  }\n};\nexport const createPost = formData => async dispatch => {\n  try {\n    const res = await axios.post(`/api/posts`, formData);\n    dispatch(createPostSuccess(res.data));\n    // dispatch(setAlert(\"Post created\", \"success\"));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n    console.log(error.response.data);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch(updateLikes({\n      id,\n      likes: res.data\n    }));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n  }\n};\nexport const unlikePost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch(updateLikes({\n      id,\n      likes: res.data\n    }));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    console.log(\"1111111111111111111\", id);\n    await axios.delete(`/api/posts/${id}`);\n    console.log(\"222222222222222222\");\n    dispatch(removePost(id));\n    // dispatch(setAlert(\"Post deleted\", \"success\"));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n    console.log(error.response.data);\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch(getPostSuccess(res.data));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n  }\n};\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch(addOrRemoveComment(res.data));\n    // dispatch(setAlert(\"Comment added\", \"success\"));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n  }\n};\nexport const removeComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch(addOrRemoveComment(res.data));\n    // dispatch(setAlert(\"Comment removed\", \"success\"));\n  } catch (error) {\n    dispatch(postError(error.response.data));\n  }\n};\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","posts","post","error","loading","postSlice","name","reducers","getPostsSuccess","state","action","payload","createPostSuccess","unshift","postError","updateLikes","id","likes","map","_id","removePost","console","log","filter","getPostSuccess","addOrRemoveComment","comments","actions","getPosts","dispatch","res","get","data","response","createPost","formData","likePost","put","unlikePost","deletePost","delete","getPost","addComment","postId","config","headers","removeComment","commentId","reducer"],"sources":["C:/Users/wangz/OneDrive/文档/GitHub/Kitten/frontend/src/Redux/Reducers/PostSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n// import { setAlert } from \"./alert\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  error: {},\r\n  loading: true,\r\n};\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    getPostsSuccess(state, action) {\r\n      state.posts = action.payload;\r\n      state.post = null;\r\n      state.loading = false;\r\n    },\r\n    createPostSuccess(state, action) {\r\n      state.posts.unshift(action.payload);\r\n      state.loading = false;\r\n    },\r\n    postError(state, action) {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    updateLikes(state, action) {\r\n      const { id, likes } = action.payload;\r\n      state.posts = state.posts.map((post) =>\r\n        post._id === id ? { ...post, likes } : post\r\n      );\r\n      state.loading = false;\r\n    },\r\n    removePost(state, action) {\r\n        console.log(\"1111111111111111111\");\r\n      const { id } = action.payload;\r\n      state.posts = state.posts.filter((post) => post._id !== id);\r\n      state.loading = false;\r\n    },\r\n    getPostSuccess(state, action) {\r\n      state.post = action.payload;\r\n      state.loading = false;\r\n    },\r\n    addOrRemoveComment(state, action) {\r\n      state.post = { ...state.post, comments: action.payload };\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getPostsSuccess,\r\n  createPostSuccess,\r\n  postError,\r\n  updateLikes,\r\n  removePost,\r\n  getPostSuccess,\r\n  addOrRemoveComment,\r\n} = postSlice.actions;\r\n\r\n// Async Thunks\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n    dispatch(getPostsSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n    console.log(error.response.data);\r\n  }\r\n};\r\n\r\nexport const createPost = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/posts`, formData);\r\n    dispatch(createPostSuccess(res.data));\r\n    // dispatch(setAlert(\"Post created\", \"success\"));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n    console.log(error.response.data);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n    dispatch(updateLikes({ id, likes: res.data }));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n  }\r\n};\r\n\r\nexport const unlikePost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n    dispatch(updateLikes({ id, likes: res.data }));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    console.log(\"1111111111111111111\",id);\r\n    await axios.delete(`/api/posts/${id}`);\r\n    console.log(\"222222222222222222\");\r\n    dispatch(removePost(id));\r\n    // dispatch(setAlert(\"Post deleted\", \"success\"));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n    console.log(error.response.data);\r\n  }\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n    dispatch(getPostSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n  }\r\n};\r\n\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch(addOrRemoveComment(res.data));\r\n    // dispatch(setAlert(\"Comment added\", \"success\"));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n  }\r\n};\r\n\r\nexport const removeComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n    dispatch(addOrRemoveComment(res.data));\r\n    // dispatch(setAlert(\"Comment removed\", \"success\"));\r\n  } catch (error) {\r\n    dispatch(postError(error.response.data));\r\n  }\r\n};\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}